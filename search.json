[{"path":"https://vibe-lab-gsd.github.io/zoneR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 zoneR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kamryn Mansfield. Author. Carole Voulgaris. Author, maintainer.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mansfield K, Voulgaris C (2025). zoneR: Zoning Code Analysis. R package version 0.5.0, https://github.com/vibe-lab-gsd/zoneR.","code":"@Manual{,   title = {zoneR: Zoning Code Analysis},   author = {Kamryn Mansfield and Carole Voulgaris},   year = {2025},   note = {R package version 0.5.0},   url = {https://github.com/vibe-lab-gsd/zoneR}, }"},{"path":"https://vibe-lab-gsd.github.io/zoneR/index.html","id":"zoner","dir":"","previous_headings":"","what":"Zoning Code Analysis","title":"Zoning Code Analysis","text":"Analyze housing capacity cities using Open Zoning Feed Specification (OZFS) data. main function zoneR zr_run_zoning_checks() reads OZFS .bldg, .parcel, .zoning file. calculates zoning requirements parcel, checks building characteristics, returns data frame row parcel “allowed” column containing one three possible values. TRUE: building allowed parcel FALSE: building allowed parcel MAYBE: building might allowed parcel depending conditions yet possible express OZFS.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Zoning Code Analysis","text":"can install development version zoneR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"vibe-lab-gsd/zoneR\")"},{"path":"https://vibe-lab-gsd.github.io/zoneR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Zoning Code Analysis","text":"basic example finding parcels Paradise, TX allow duplex gross floor area 3200 square feet height 45 feet. Small OZFS files accessible package used example. get file paths example OZFS files using zr_example_files(). can put files zr_run_zoning_checks() function assign result variable called zoning_checks. result function simple features data frame following columns: “parcel_id”, “allowed”, “reason”, “geometry.” Note geometry centroid parcel. graph visualization results. appears duplex allowed Paradise parcels. look reasons, can specify checks want run look results. Since land use regulations often distinguishing factor allowing building parcel, res_type check run next example. also put print_checkpoints = FALSE don’t really need tell us done different parts function. Now can see parcels district allows buildings two units. makes sense parcels previous check might allowed building. constraint checks visualize. Height Check  Building Fit Check  Many “MAYBE” values attached bldg_fit constraint represent parcels didn’t labeled sides. Without labeled sides, proper buildable area calculated, building fit check skipped.","code":"library(zoneR)  bldg_path <- zr_example_files(\"2_fam.bldg\") parcel_path <- zr_example_files(\"Paradise.parcel\") zoning_path <- zr_example_files(\"Paradise.zoning\") zoning_checks <- zr_run_zoning_checks(bldg_file = bldg_path,                                       parcel_files = parcel_path,                                       zoning_files = zoning_path) #> ___data_prep___(0.4 sec) #>  #> ___get_zoning_req___(0.9 sec) #>  #> ___initial_checks___(0.5 sec) #> 21 parcels are TRUE or MAYBE #>  #> ___bldg_fit___(28.6 sec) #> 9 parcels are TRUE or MAYBE #>  #> _____summary_____ #> total runtime: 30.3 sec (0.51 min) #> 0 / 421 parcels allow the building #> 11 / 421 parcels might allow the building head(zoning_checks) #> Simple feature collection with 6 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -97.69917 ymin: 33.1448 xmax: -97.69153 ymax: 33.15607 #> Geodetic CRS:  WGS 84 #>                           parcel_id allowed                         reason #> 1     Wise_County_combined_parcel_1   FALSE               res_type, height #> 2 Wise_County_combined_parcel_10300   FALSE               res_type, height #> 3 Wise_County_combined_parcel_10450   FALSE               res_type, height #> 4 Wise_County_combined_parcel_10451   FALSE res_type, height, unit_density #> 5 Wise_County_combined_parcel_10452   FALSE res_type, height, unit_density #> 6 Wise_County_combined_parcel_10464   FALSE               res_type, height #>                     geometry #> 1 POINT (-97.69524 33.14755) #> 2 POINT (-97.69382 33.15607) #> 3  POINT (-97.69415 33.1448) #> 4 POINT (-97.69156 33.14562) #> 5 POINT (-97.69153 33.14699) #> 6 POINT (-97.69917 33.15142) zoning_checks <- zr_run_zoning_checks(bldg_file = bldg_path,                                       parcel_files = parcel_path,                                       zoning_files = zoning_path,                                        checks = \"res_type\",                                       print_checkpoints = FALSE) #> zoning checks finished #> total runtime: 1.3 sec (0.02 min) zoning_checks <- zr_run_zoning_checks(bldg_file = bldg_path,                                       parcel_files = parcel_path,                                       zoning_files = zoning_path,                                        checks = \"height\",                                       print_checkpoints = FALSE) #> zoning checks finished #> total runtime: 1.4 sec (0.02 min) zoning_checks <- zr_run_zoning_checks(bldg_file = bldg_path,                                       parcel_files = parcel_path,                                       zoning_files = zoning_path,                                        checks = \"bldg_fit\",                                       print_checkpoints = FALSE) #> zoning checks finished #> total runtime: 96.8 sec (1.61 min)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/index.html","id":"detailed-check","dir":"","previous_headings":"Example","what":"Detailed Check","title":"Zoning Code Analysis","text":"addition usual data frame returned, setting detailed_check = TRUE returns data frame additional columns every check took place (Note requires processing time code skip consecutive checks previous check yields FALSE). added columns, can look closely building fit parcels. appears res_type constraint restrictive unit_size constraint least restrictive given building.","code":"zoning_checks <- zr_run_zoning_checks(bldg_file = bldg_path,                                       parcel_files = parcel_path,                                       zoning_files = zoning_path,                                       detailed_check = TRUE) #> ___data_prep___(0.2 sec) #>  #> ___get_zoning_req___(1 sec) #>  #> ___initial_checks___(0.5 sec) #> 21 parcels are TRUE or MAYBE #>  #> ___bldg_fit___(1.57 min) #> 221 parcels are TRUE or MAYBE #>  #> _____summary_____ #> total runtime: 96 sec (1.6 min) #> 0 / 421 parcels allow the building #> 11 / 421 parcels might allow the building column_true_sums <- colSums(sf::st_drop_geometry(zoning_checks) == \"TRUE\", na.rm = TRUE)  ordered_sums <- column_true_sums[order(column_true_sums)]"},{"path":"https://vibe-lab-gsd.github.io/zoneR/index.html","id":"inside-the-zr_run_zoning_checks","dir":"","previous_headings":"","what":"Inside the zr_run_zoning_checks()","title":"Zoning Code Analysis","text":"functions zoneR created zr_run_zoning_checks(), can use desired. main variables different zoneR functions take . bldg_data: .bldg file read list using rjson::fromJSON() parcel_dims: Created zr_get_parcel_dims() function. simple features data frame centroid dimensional data .parcel file. contains one row per parcel. parcel_data: One row parcel_dims data frame representing unique parcel parcel_geo: Created zr_get_parcel_geo() function. simple features data frame containing geometry parcel side without centroid dimensional data. zoning_data: data .zoning file read simple features data frame using sf::st_read(). district_data: One row zoning_data data frame representing unique district.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/possible_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible Constraints to Check — possible_checks","title":"Possible Constraints to Check — possible_checks","text":"character vector lists possible constraints can checked zr_run_zoning_checks() functions","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/possible_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible Constraints to Check — possible_checks","text":"","code":"possible_checks"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/possible_checks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Possible Constraints to Check — possible_checks","text":"character vector c(\"res_type\", \"far\", \"fl_area\", \"fl_area_first\", \"fl_area_top\", \"footprint\", \"height\", \"height_eave\", \"lot_cov_bldg\", \"lot_area\", \"parking_enclosed\", \"stories\", \"unit_0bed\", \"unit_1bed\", \"unit_2bed\", \"unit_3bed\", \"unit_4bed\", \"unit_density\", \"unit_pct_0bed\", \"unit_pct_1bed\", \"unit_pct_2bed\", \"unit_pct_3bed\", \"unit_pct_4bed\", \"total_units\", \"unit_size_avg\", \"unit_size\", \"bldg_fit\", \"overlay\")","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/state_planes_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"State Planes with Projected CRS Data — state_planes_crs","title":"State Planes with Projected CRS Data — state_planes_crs","text":"data set contains geometry US State Plane Zone along EPSG code projected coordinate system. geometry gathered arcgis hub data set, epsg codes gathered epsg.io","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/state_planes_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State Planes with Projected CRS Data — state_planes_crs","text":"","code":"state_planes_crs"},{"path":[]},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/state_planes_crs.html","id":"state-planes-crs","dir":"Reference","previous_headings":"","what":"state_planes_crs","title":"State Planes with Projected CRS Data — state_planes_crs","text":"Simple feature collection 121 features 4 fields OBJECTID Row Index ZONE Zone Abbreviation ZONENAME Zone Name EPSG_NAD83 Projected CRS EPSG Code","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/state_planes_crs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"State Planes with Projected CRS Data — state_planes_crs","text":"https://hub.arcgis.com/datasets/esri::usa-state-plane-zones-nad83/explore https://epsg.io/","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_add_setbacks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add setback column to the parcel_geo data frame — zr_add_setbacks","title":"Add setback column to the parcel_geo data frame — zr_add_setbacks","text":"zr_add_setbacks() returns parcel_geo data frame new column containing setback values","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_add_setbacks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add setback column to the parcel_geo data frame — zr_add_setbacks","text":"","code":"zr_add_setbacks(parcel_geo, district_data, zoning_req)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_add_setbacks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add setback column to the parcel_geo data frame — zr_add_setbacks","text":"parcel_geo output zr_get_parcel_geo(). simple features object depicting side parcel label (front, interior side, exterior side, rear). district_data district_data corresponding parcel_geo. district_data object one row zoning simple features object. zoning_req results get_zoning_req funcion. provided, parcel_geo_dims need provided.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_add_setbacks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add setback column to the parcel_geo data frame — zr_add_setbacks","text":"Returns parcel_geo data frame \"setbacks\" column added end.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_constraints.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the building allowed base on zoning constraints? — zr_check_constraints","title":"Is the building allowed base on zoning constraints? — zr_check_constraints","text":"zr_check_constraints() compares building characteristics many main constraints .zoning file. returns one-row data frame column constraint checked .","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_constraints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the building allowed base on zoning constraints? — zr_check_constraints","text":"","code":"zr_check_constraints(   vars,   zoning_req,   checks = c(\"far\", \"fl_area\", \"fl_area_first\", \"fl_area_top\", \"footprint\", \"height\",     \"height_eave\", \"lot_cov_bldg\", \"lot_size\", \"parking_enclosed\", \"stories\",     \"unit_0bed\", \"unit_1bed\", \"unit_2bed\", \"unit_3bed\", \"unit_4bed\", \"unit_density\",     \"unit_pct_0bed\", \"unit_pct_1bed\", \"unit_pct_2bed\", \"unit_pct_3bed\", \"unit_pct_4bed\",     \"total_units\", \"unit_size_avg\") )"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_constraints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the building allowed base on zoning constraints? — zr_check_constraints","text":"vars result zr_get_variables() function. data frame supplied, bldg_data, parcel_data, zoning_data needed. zoning_req output zr_get_zoning_req(). data frame constraint values checks list checks take place. default every check possible. Note, zoning file zoning info one constraints listed checks variable, assumed building characteristic allowed.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if footprint fits in buildable area — zr_check_fit","title":"Check if footprint fits in buildable area — zr_check_fit","text":"zr_check_fit() takes building footprint bldg_data object checks see fit provided buildable area. buildable area can shape.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if footprint fits in buildable area — zr_check_fit","text":"","code":"zr_check_fit(bldg_data, buildable_area, crs = 3081)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if footprint fits in buildable area — zr_check_fit","text":"bldg_data list data frames attributes representing building. buildable_area geometry. Usually parcels buildable area calculated setback requirements. crs projected Coordinate Reference System study area. Must meters.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if footprint fits in buildable area — zr_check_fit","text":"Returns TRUE FALSE stating whether building footprint fit buildable area.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_res_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the building allowed base on use_type? — zr_check_res_type","title":"Is the building allowed base on use_type? — zr_check_res_type","text":"Campares building use type permitted use types zoning code returns TRUE FALSE","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_res_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the building allowed base on use_type? — zr_check_res_type","text":"","code":"zr_check_res_type(vars, district_data)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_res_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the building allowed base on use_type? — zr_check_res_type","text":"vars result zr_get_variables() function. data frame supplied, bldg_data, parcel_data, zoning_data needed. district_data one row (representing one district) zoning data frame created OZFS *.zoning file","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_res_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the building allowed base on use_type? — zr_check_res_type","text":"TRUE FALSE","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare unit sizes and allowed unit sizes — zr_check_unit","title":"Compare unit sizes and allowed unit sizes — zr_check_unit","text":"zr_check_unit() checks see district's zoning code allows building based unit sizes.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare unit sizes and allowed unit sizes — zr_check_unit","text":"","code":"zr_check_unit(district_data, bldg_data, vars)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare unit sizes and allowed unit sizes — zr_check_unit","text":"district_data one row (representing one district) zoning data frame created OZFS *.zoning file bldg_data either file path OZFS *.bldg file list created *.bldg file using rjson::fromJSON vars result get_variables() function. data frame supplied, bldg_data, parcel_data, zoning_data needed.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_check_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare unit sizes and allowed unit sizes — zr_check_unit","text":"Returns TRUE, FALSE, MAYBE stating whether building allowed district based unit sizes.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_example_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to zoneR's example files — zr_example_files","title":"Get path to zoneR's example files — zr_example_files","text":"zoneR example OZFS files stored internally. zr_example_files returns either list names example files, file path specified file.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_example_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to zoneR's example files — zr_example_files","text":"","code":"zr_example_files(file = NULL)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_example_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to zoneR's example files — zr_example_files","text":"file name example file. NULL, list names example files returned","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_example_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to zoneR's example files — zr_example_files","text":"Either list names example files, path specified file","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_find_district_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Find corresponding zoning district — zr_find_district_idx","title":"Find corresponding zoning district — zr_find_district_idx","text":"zr_find_district_idx() uses sf::st_join() adds new column parcels data contains zoning_sf row index district parcel ","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_find_district_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find corresponding zoning district — zr_find_district_idx","text":"","code":"zr_find_district_idx(   parcels_centroids_sf,   zoning_sf,   idx_col_name = \"zoning_id\" )"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_find_district_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find corresponding zoning district — zr_find_district_idx","text":"parcels_centroids_sf sf object parcel centroids zoning_sf simple features object row zoning district columns holding geojson formatted zoning requirements district. idx_col_name name new column added district index","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_find_district_idx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find corresponding zoning district — zr_find_district_idx","text":"parcels centroids object input additional column stating row number corresponding zoning_sf district","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_buildable_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parcel's buildable area — zr_get_buildable_area","title":"Create a parcel's buildable area — zr_get_buildable_area","text":"zr_get_buildable_area() takes parcel setback information produces polygon representing buildable area parcel.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_buildable_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parcel's buildable area — zr_get_buildable_area","text":"","code":"zr_get_buildable_area(parcel_with_setbacks, crs = NULL)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_buildable_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parcel's buildable area — zr_get_buildable_area","text":"parcel_with_setbacks parcel_geo object setback information added. parcel_with_setbacks output zr_add_setbacks() function. crs projected Coordinate Reference System study area. Must meters. NULL, crs calculated using zr_get_crs().","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_buildable_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parcel's buildable area — zr_get_buildable_area","text":"Returns polygon representing buildable area parcel.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find EPSG code for State Plane CRS — zr_get_crs","title":"Find EPSG code for State Plane CRS — zr_get_crs","text":"zr_get_crs() uses state plane geometry find appropriate NAD83 crs input geometry","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find EPSG code for State Plane CRS — zr_get_crs","text":"","code":"zr_get_crs(geom_data, large_area = FALSE)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find EPSG code for State Plane CRS — zr_get_crs","text":"geom_data Either simple feature collection file path .geojson file. large_area Set TRUE data may cross multiple state planes. bit longer find state plane covers best","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find EPSG code for State Plane CRS — zr_get_crs","text":"appropriate epsg code integer","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_crs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find EPSG code for State Plane CRS — zr_get_crs","text":"state plane data compiled using ArcGIS Hub epsg.io website.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_parcel_dims.html","id":null,"dir":"Reference","previous_headings":"","what":"Isolate dimensional rows from tidyparcel data — zr_get_parcel_dims","title":"Isolate dimensional rows from tidyparcel data — zr_get_parcel_dims","text":"Isolate dimensional rows tidyparcel data","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_parcel_dims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Isolate dimensional rows from tidyparcel data — zr_get_parcel_dims","text":"","code":"zr_get_parcel_dims(parcels_file)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_parcel_dims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isolate dimensional rows from tidyparcel data — zr_get_parcel_dims","text":"parcels_file Either file path parcels geojson file sf object data.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_parcel_dims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Isolate dimensional rows from tidyparcel data — zr_get_parcel_dims","text":"sf object dimensional centroid data parcel","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_parcel_geo.html","id":null,"dir":"Reference","previous_headings":"","what":"Isolate known side geometry from tidyparcel data — zr_get_parcel_geo","title":"Isolate known side geometry from tidyparcel data — zr_get_parcel_geo","text":"Isolate known side geometry tidyparcel data","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_parcel_geo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Isolate known side geometry from tidyparcel data — zr_get_parcel_geo","text":"","code":"zr_get_parcel_geo(parcels_file)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_parcel_geo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isolate known side geometry from tidyparcel data — zr_get_parcel_geo","text":"parcels_file Either file path parcels geojson file sf object data.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_parcel_geo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Isolate known side geometry from tidyparcel data — zr_get_parcel_geo","text":"sf object side geometries parcels identified sides","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_unit_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data frame with unit info — zr_get_unit_info","title":"Create data frame with unit info — zr_get_unit_info","text":"zr_get_unit_info() takes json representing building returns data frame data unit building.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_unit_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data frame with unit info — zr_get_unit_info","text":"","code":"zr_get_unit_info(bldg_data)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_unit_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data frame with unit info — zr_get_unit_info","text":"bldg_data either file path OZFS *.bldg file list created *.bldg file using rjson::fromJSON","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_unit_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data frame with unit info — zr_get_unit_info","text":"data frame information unit building","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all OZFS variables in one table — zr_get_variables","title":"Get all OZFS variables in one table — zr_get_variables","text":"Get OZFS variables one table","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all OZFS variables in one table — zr_get_variables","text":"","code":"zr_get_variables(bldg_data, parcel_data, district_data, zoning_data)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all OZFS variables in one table — zr_get_variables","text":"bldg_data either file path OZFS *.bldg file list created *.bldg file using rjson::fromJSON parcel_data one row parcel data frame created OZFS *.parcel file district_data one row (representing one district) zoning data frame created OZFS *.zoning file zoning_data either path *.zoning file list created *.zoning file using rjson::fromJSON","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all OZFS variables in one table — zr_get_variables","text":"one-row data frame column variable","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_zoning_req.html","id":null,"dir":"Reference","previous_headings":"","what":"List district zoning requirement values — zr_get_zoning_req","title":"List district zoning requirement values — zr_get_zoning_req","text":"many zoning requirements depend proposed building parcel zoning district, zr_get_zoning_req() function takes tidybuilding, tidyparcel, district_data outputs data frame listing set zoning requirements three objects create. every value NA, indicate building land use allowed zoning district.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_zoning_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List district zoning requirement values — zr_get_zoning_req","text":"","code":"zr_get_zoning_req(   district_data,   bldg_data = NULL,   parcel_data = NULL,   zoning_data = NULL,   vars = NULL )"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_zoning_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List district zoning requirement values — zr_get_zoning_req","text":"district_data one row (representing one district) zoning data frame created OZFS *.zoning file bldg_data either file path OZFS *.bldg file list created *.bldg file using rjson::fromJSON parcel_data one row parcel data frame created OZFS *.parcel file zoning_data either path *.zoning file list created *.zoning file using rjson::fromJSON vars result get_variables() function. data frame supplied, bldg_data, parcel_data, zoning_data needed.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_get_zoning_req.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List district zoning requirement values — zr_get_zoning_req","text":"Returns data frame value zoning requirement specific building, parcel, zoning district. NA values indicate requirement recorded district. every value NA, indicate building land use allowed zoning district.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_ozfs_is_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Is it formatted to OZFS standards? — zr_ozfs_is_valid","title":"Is it formatted to OZFS standards? — zr_ozfs_is_valid","text":"zr_ozfs_is_valid() TRUE FALSE stating whether files properly formatted according OZFS standards. Use zr_ozfs_validate detailed list files meet standard.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_ozfs_is_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is it formatted to OZFS standards? — zr_ozfs_is_valid","text":"","code":"zr_ozfs_is_valid(list_of_files)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_ozfs_is_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is it formatted to OZFS standards? — zr_ozfs_is_valid","text":"list_of_files list file paths OZFS *.zoning files","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_ozfs_is_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is it formatted to OZFS standards? — zr_ozfs_is_valid","text":"TRUE FALSE stating whether data valid OZFS format ","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_ozfs_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Find invalid ozfs zoning files — zr_ozfs_validate","title":"Find invalid ozfs zoning files — zr_ozfs_validate","text":"zr_ozfs_validate() lists errors formatting OZFS data","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_ozfs_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find invalid ozfs zoning files — zr_ozfs_validate","text":"","code":"zr_ozfs_validate(list_of_files)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_ozfs_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find invalid ozfs zoning files — zr_ozfs_validate","text":"list_of_files list .zoning file paths","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_ozfs_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find invalid ozfs zoning files — zr_ozfs_validate","text":"list files names ozfs errors warnings","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_rotate_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate polygon by specified angle — zr_rotate_shape","title":"Rotate polygon by specified angle — zr_rotate_shape","text":"zr_rotate_shape() function takes one-row special feature object rotates geometry centroid specified point.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_rotate_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate polygon by specified angle — zr_rotate_shape","text":"","code":"zr_rotate_shape(shape, angle_degrees, center = NULL)"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_rotate_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate polygon by specified angle — zr_rotate_shape","text":"shape polygon want rotate. Must special feature object one row. angle_degrees angle (degrees) want rotate shape center center rotate form XY coordinates. Default NULL,  NULL, rotation centroid.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_rotate_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate polygon by specified angle — zr_rotate_shape","text":"Returns simple feature shape object rotated geometry","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_run_zoning_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Find where a building is allowed to be built — zr_run_zoning_checks","title":"Find where a building is allowed to be built — zr_run_zoning_checks","text":"zr_run_zoning_checks() checks building information zoning constraints see parcels allow building.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_run_zoning_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find where a building is allowed to be built — zr_run_zoning_checks","text":"","code":"zr_run_zoning_checks(   bldg_file,   parcel_files,   zoning_files,   detailed_check = FALSE,   print_checkpoints = TRUE,   checks = possible_checks,   save_to = NULL )"},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_run_zoning_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find where a building is allowed to be built — zr_run_zoning_checks","text":"bldg_file path OZFS *.bldg parcel_files path OZFS .parcel file, path folder containing OZFS .parcel files zoning_files path OZFS .zoning file, path folder containing OZFS .zoning files detailed_check TRUE, every parcel passes check matter result, takes time. FALSE, subsequent checks skipped soon one check reads FALSE print_checkpoints TRUE, runtimes info printed certain points throughout function. checks list checks take place. default check every constraint possible OZFS. constraints can found package data possible_checks. Note, zoning file zoning info one constraints listed checks variable, assumed building characteristic allowed. save_to path folder directory want save results geojson file.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_run_zoning_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find where a building is allowed to be built — zr_run_zoning_checks","text":"simple features data frame geometry centroid parcel columns show info allowance building.","code":""},{"path":"https://vibe-lab-gsd.github.io/zoneR/reference/zr_run_zoning_checks.html","id":"zoning-checks","dir":"Reference","previous_headings":"","what":"Zoning Checks","title":"Find where a building is allowed to be built — zr_run_zoning_checks","text":"checks can take place zr_run_zoning_checks() included table . checks required checked specified user checks argument. optional checks possible stored possible_checks data default value checks argument. checks built function , therefore, part checks argument. resulting data frame zr_run_zoning_checks() \"reason\" column names checks caused FALSE MAYBE building allowance. table specifies check means part \"reason\" column.","code":""}]
